name: Prepare Native Assets for Linux

on:
  workflow_call:
    inputs:
      triplet:
        required: true
        type: string
      rid:
        required: true
        type: string
      vcpkg-cache-path:
        required: true
        type: string
      vcpkg-feature-flags:
        required: true
        type: string
      runner:
        required: true
        type: string
      container-image:
        required: true
        type: string

jobs:
  native:
    name: Build Linux (${{ inputs.triplet }} on ${{ inputs.container-image }})
    runs-on: ${{ inputs.runner }}
    container: ${{ inputs.container-image }}
    defaults: { run: { shell: bash } }
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

    steps:
      - name: Install Build Prerequisites
        run: |
          apt-get update
          # core build tools + generic libs
          apt-get install -y --no-install-recommends \
          git wget curl build-essential pkg-config tar unzip zip ca-certificates \
          python3 python3-pip python3-jinja2 bison autoconf automake \
          autoconf-archive libltdl-dev libtool

          # SDL2 video/audio back-ends
          apt-get install -y --no-install-recommends \
          libx11-dev libxext-dev libxrandr-dev libxinerama-dev libxcursor-dev \
          libxi-dev libxss-dev libxrender-dev \
          libwayland-dev libxkbcommon-dev wayland-protocols libegl1-mesa-dev libdrm-dev \
          libvulkan-dev libasound2-dev

          apt-get install -y $(apt-cache search '^libicu[0-9]+$' | head -1 | cut -d' ' -f1)
          update-ca-certificates
        env: { DEBIAN_FRONTEND: noninteractive }

      - uses: actions/checkout@v4
        with: { submodules: recursive, fetch-depth: 0 }

      - name: Configure Git Safe Directory
        run: git config --global --add safe.directory "$(pwd)"

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Run Vcpkg Setup Action
        uses: ./.github/actions/vcpkg-setup
        with:
          runner-os: ${{ inputs.runner }}
          cache-key-base: ${{ inputs.container-image }}-rebuild-with-full-deps
          triplet: ${{ inputs.triplet }}
          vcpkg-cache-path: ${{ inputs.vcpkg-cache-path }}
          vcpkg-feature-flags: ${{ inputs.vcpkg-feature-flags }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: nuget-${{ inputs.container-image }}-${{ hashFiles('./build/_build/packages.lock.json') }}
          restore-keys: |
            nuget-${{ inputs.container-image }}-

      - name: Restore Cake host packages
        run: dotnet restore ./build/_build/Build.csproj --use-lock-file

      - name: Build Cake host
        run: dotnet build ./build/_build/Build.csproj --configuration Release --no-restore

      - name: Run Cake Build (Harvest Task)
        run: ./build/_build/bin/Release/net9.0/Build --target Harvest --library SDL2 --library SDL2_image --repo-root "$(pwd)"

      - name: Upload Harvested Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: harvested-assets-linux-${{ inputs.rid }}
          path: artifacts/harvest_output/
          if-no-files-found: error
          retention-days: 7
